flex-box -> with the display flex  container are horizonataly . 
            justify-content:center;   horizontal center  x axix
	    align-items:center;        vertically center  y axix  
            flex-wrap:wrap;           resposiveness 

-------------------------------------------------------------------------------
grid --->
     container-->   
     display:grid ;
     grid-template-columns : auto auto auto ;      // size of grid
     grid-template-column:auto auto auto ;      // 3*3 matrix grid you can also give size
     grid-template-areas:header header header
     			main  main   aside
			footer footer footer;
     
     
     
     

    items-->
    #one{
              grid-area:header;                 // for template-areas 
      
     }
	grid-column:1 /span 3      // start 1 span 3 grid 
	grid-column: 2/4 	   // start 2 column ,end 4 column
	grid-row: 2 / span 2	// start row 2, span 2 rows 
	grid-row: 2/3		// start row 2,end 3 row
	
	grid-column-start:1 ; 
	grid-column-end: 4;
	grid-row-start: 3;
	grid-row-end: 4;
	
	gap: row-gap column-gap; 
	
	grid-template-columns: repeat(5, 1fr);    // repeat frame  ,using in areas 
	grid-auto-columns: minmax(100px, auto);     /// responsiveness  max-> auto ,min-> 100px 
        
	grid-area: row-start/column-start/row-end/column-end;    // grid position define
	justify-content: center;   // horizontal center
	align-items: center;        // vertical center
	
ref-----> https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Grid_Template_Areas
	
------------------------------------------------------------------------------
display--------------------------------------->
none ---              ///hide content
block--              ///convert inline element to block element
inline--            //// in one and   convert block element to inline element  (can't give height and width , only take padding ,margin)
inline-block;      ///same as inline , but we give height and width
----------------------------------------------------------
float--->using for position 
float:left: ---elements are start left     ( and inline )
float:right: ---elements are start right   and inline
-------------------------------------------->
css selector -
tag selecotr -> p{},div{}
class--> .container
id--> #demo
indside tag-> div p{}
indside class -> div.container{}
                 div>p{}    //all  p who have parent div
		 div+p{}    //select first immidatep, after div
		 div~p{}    //select every p ,after div 
		 [title~=flower]   //select those img that titile have flower
		 div[class*="test"]   //select all div ,who have class test
		 a[href^="https"]    //start
		 a[href$="https"]   //end 
		 p:first-child     // [last-child ,first-line,first-letter]select first p , any parent 
		 input:enabled    //enabled,disabled,focus,checked,default
		 a:hover         //active,link
		 p:nth-child(2)  // select second p in parent
		 p:nth-last-child(2) //
		 p:only-of-type {}   //every p ,that parent have only one p
-----------------------------------------------------------------------------
some function -->
	  width: calc(100% - 200px);   // perform calculation 
	  width: max(50%, 300px);   //min also
	  var() ,rgb(),
	  background: linear-gradient(white, yellow,white);  // mixing color
	  

		 
		 
     
